do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16,...)local v17=1;local v18;v15=v4(v3(v15,5),"..",function(v29)if (v1(v29,2)==79) then local v62=0;while true do if (v62==0) then v18=v0(v3(v29,1,1));return "";end end else local v63=v2(v0(v29,16));if v18 then local v71=0;local v72;while true do if (v71==0) then v72=v5(v63,v18);v18=nil;v71=1;end if (1==v71) then return v72;end end else return v63;end end end);local function v19(v30,v31,v32)if v32 then local v64=(v30/(2^(v31-(4 -3))))%((1 + 1)^(((v32-((727 -(9 + 716)) -1)) -(v31-(1 + 0))) + 1));return v64-(v64%(1377 -(722 + 654)));else local v65=(7 -5)^(v31-(1 + 0));return (((v30%(v65 + v65))>=v65) and (1 + (0 -0))) or (1223 -(356 + 867));end end local function v20()local v37=v1(v15,v17,v17);v17=v17 + 1;return v37;end local function v21()local v38,v39=v1(v15,v17,v17 + (3 -1));v17=v17 + 2;return (v39 * (402 -146)) + v38;end local function v22()local v40=1671 -(984 + 687);local v41;local v42;local v43;local v44;while true do if (v40==(3 -2)) then return (v44 * (39028748 -22251532)) + (v43 * (38819 + 26717)) + (v42 * 256) + v41;end if (v40==(0 + 0)) then v41,v42,v43,v44=v1(v15,v17,v17 + (1232 -(683 + 547)) + 1);v17=v17 + (1327 -(606 + (2557 -1840)));v40=1 + (1771 -(978 + 793));end end end local function v23()local v45=v22();local v46=v22();return (( -(1 + 1) * v19(v46,29 + 3)) + (720 -((1244 -(160 + 756)) + (876 -485)))) * (((599 + 755) -(905 + 447))^(v19(v46,16 + 5,50 -19) -(1899 -(714 + 162)))) * ((((v19(v46,(4 -2) -(1 + 0),6 + 14) * ((2 + 0)^((202 + 740) -(607 + 303)))) + v45)/((2 + 0)^52)) + 1 + 0);end local function v24(v33)local v47=0;local v48;local v49;while true do if ((5 -2)==v47) then return v6(v49);end if (v47==(1 -(0 + 0))) then v48=v3(v15,v17,(v17 + v33) -(1510 -((430 -210) + (6221 -4932))));v17=v17 + v33;v47=2 + 0;end if (v47==(1953 -(586 + 1365))) then v49={};for v73=1 + 0, #v48 do v49[v73]=v2(v1(v3(v48,v73,v73)));end v47=1297 -(319 + 975);end if (v47==(0 + 0)) then v48=nil;if  not v33 then v33=v22();if (v33==(0 + 0)) then return "";end end v47=1134 -((2326 -1735) + 542);end end end local v25=v22;local function v26(...)return {...},v11("#",...);end local function v27()local v50=0 -0;local v51;local v52;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v50==(2 + 0)) then v55=nil;v56=nil;v50=6 -3;end if ((1 -0)~=v50) then else v53=nil;v54=nil;v50=1 + 1;end if ((1127 -(445 + 679))==v50) then v57=nil;v58=nil;v50=14 -10;end if ((570 -(117 + 453))==v50) then v51=607 -(412 + 195);v52=nil;v50=187 -(44 + 142);end if (v50==4) then while true do if (v51==(5 -2)) then v58=nil;while true do local v91=0;while true do if (v91~=0) then else if (v52~=(804 -(103 + 701))) then else v53={};v54={};v55={};v52=1 + 0;end if (v52==(2 + 0)) then for v101=1 + 0,v57 do local v102=976 -(664 + 312);local v103;local v104;local v105;while true do if ((1 + 0)==v102) then v105=nil;while true do if (v103~=0) then else v104=v20();v105=nil;v103=1 + 0;end if (1==v103) then if (v104==(1660 -(1495 + 164))) then v105=v20()~=0;elseif (v104==(2 + 0)) then v105=v23();elseif (v104==(2 + 1)) then v105=v24();end v58[v101]=v105;break;end end break;end if ((304 -(93 + 211))==v102) then v103=0;v104=nil;v102=1;end end end v56[3]=v20();for v106=1,v22() do local v107=950 -(363 + 587);local v108;local v109;local v110;while true do if (v107~=(1 + 0)) then else v110=nil;while true do if (v108~=(0 + 0)) then else local v115=0;while true do if ((0 -0)==v115) then v109=0;v110=nil;v115=1531 -(336 + 1194);end if (v115~=(825 -(384 + 440))) then else v108=1 + 0;break;end end end if ((1 -0)~=v108) then else while true do if (v109==(0 + 0)) then v110=v20();if (v19(v110,1373 -(1300 + 72),2 -1)~=(1513 -(491 + 1022))) then else local v197=0 -0;local v198;local v199;local v200;local v201;local v202;while true do if (v197==(985 -(196 + 788))) then v200=nil;v201=nil;v197=2 + 0;end if (v197==(518 -(146 + 372))) then v198=196 -(65 + 131);v199=nil;v197=1 + 0;end if (v197==2) then v202=nil;while true do if (v198==(0 -0)) then local v236=0;while true do if (v236==(1 + 0)) then v198=1 + 0;break;end if (v236==(0 + 0)) then v199=0 + 0;v200=nil;v236=1;end end end if (v198~=(1109 -(981 + 127))) then else local v237=0 + 0;while true do if (v237==(1464 -(758 + 705))) then v198=2;break;end if (v237==0) then v201=nil;v202=nil;v237=1 + 0;end end end if (v198==2) then while true do if (v199==3) then if (v19(v201,5 -2,43 -(5 + 35))==(1558 -(1182 + 375))) then v202[555 -(55 + 496)]=v58[v202[2 + 2]];end v53[v106]=v202;break;end if (v199==0) then local v267=1997 -(616 + 1381);local v268;local v269;while true do if (v267==(1959 -(713 + 1245))) then while true do if (v268==(0 + 0)) then v269=0 + 0;while true do if (v269~=(0 + 0)) then else local v320=0 -0;while true do if ((0 + 0)==v320) then v200=v19(v110,2,3 -0);v201=v19(v110,231 -(112 + 115),4 + 2);v320=1 + 0;end if (v320==(1 -0)) then v269=886 -(713 + 172);break;end end end if ((1 + 0)~=v269) then else v199=1 + 0;break;end end break;end end break;end if (v267~=(309 -(299 + 10))) then else v268=273 -(216 + 57);v269=nil;v267=3 -2;end end end if (v199~=(2 -1)) then else local v270=0 + 0;while true do if (v270~=1) then else v199=48 -(23 + 23);break;end if (v270~=(1760 -(1139 + 621))) then else local v296=0;while true do if (v296==(115 -(36 + 79))) then v202={v21(),v21(),nil,nil};if (v200==(0 -0)) then local v315=0 + 0;local v316;while true do if (v315==0) then v316=0;while true do if (v316==(0 -0)) then v202[4 -1]=v21();v202[4 -0]=v21();break;end end break;end end elseif (v200==(2 -1)) then v202[9 -6]=v22();elseif (v200==(7 -5)) then v202[507 -(300 + 204)]=v22() -((2 -0)^(39 -23));elseif (v200==3) then local v332=0 -0;local v333;while true do if (v332==0) then v333=0 + 0;while true do if (v333==0) then v202[1964 -(427 + 1534)]=v22() -((4 -2)^(13 + 3));v202[1626 -(1464 + 158)]=v21();break;end end break;end end end v296=1 + 0;end if (v296==1) then v270=1514 -(231 + 1282);break;end end end end end if ((1 + 1)==v199) then local v271=0 -0;local v272;local v273;while true do if (v271==(1844 -(942 + 902))) then v272=1063 -(1020 + 43);v273=nil;v271=1664 -(369 + 1294);end if (v271==(1284 -(910 + 373))) then while true do if ((0 + 0)==v272) then v273=0;while true do if (v273==(1 + 0)) then v199=1649 -(318 + 1328);break;end if (v273==(0 -0)) then local v321=0 -0;while true do if ((0 + 0)==v321) then if (v19(v201,1,1 + 0)==(1595 -(814 + 780))) then v202[3 -1]=v58[v202[2]];end if (v19(v201,2,4 -2)==(678 -(75 + 602))) then v202[746 -(627 + 116)]=v58[v202[4 -1]];end v321=1 -0;end if (v321~=(1 -0)) then else v273=1;break;end end end end break;end end break;end end end end break;end end break;end end end break;end end break;end end break;end if (v107==(91 -(16 + 75))) then v108=505 -(79 + 426);v109=nil;v107=515 -(45 + 469);end end end v52=6 -3;end v91=1 + 0;end if (v91~=1) then else if ((1 + 0)==v52) then local v98=0 + 0;while true do if (v98==0) then v56={v53,v54,nil,v55};v57=v22();v98=1;end if ((1 -0)==v98) then v58={};v52=1 + 1;break;end end end if (v52~=(650 -(272 + 375))) then else local v99=0;local v100;while true do if (v99~=0) then else v100=0 + 0;while true do local v113=0 -0;while true do if (v113==(0 + 0)) then if (v100~=1) then else return v56;end if (v100~=(0 + 0)) then else for v189=3 -2,v22() do v54[v189-1]=v27();end for v191=1 + 0,v22() do v55[v191]=v22();end v100=1;end break;end end end break;end end end break;end end end break;end if (v51==(1524 -(977 + 546))) then v54=nil;v55=nil;v51=2 + 0;end if (v51==(0 + 0)) then local v89=0;while true do if (v89==(1 -0)) then v51=1660 -(7 + 1652);break;end if (v89~=(1411 -(890 + 521))) then else v52=0 + 0;v53=nil;v89=1;end end end if (v51~=(2 + 0)) then else local v90=0 + 0;while true do if (v90==(0 -0)) then v56=nil;v57=nil;v90=1;end if (v90~=(1 -0)) then else v51=5 -2;break;end end end end break;end end end local function v28(v34,v35,v36)local v59=v34[1];local v60=v34[2];local v61=v34[3];return function(...)local v66=1;local v67= -1;local v68={...};local v69=v11("#",...) -1;local function v70()local v75=v59;local v76=v60;local v77=v61;local v78=v26;local v79={};local v80={};local v81={};for v86=(1848 -(1526 + 322)) -0,v69 do if (((6254 -(1074 + 231))>((1284 -852) + 146 + 1003)) and (v86>=v77)) then v79[v86-v77]=v68[v86 + (3 -2)];else v81[v86]=v68[v86 + 1 + 0];end end local v82=(v69-v77) + (2 -1);local v83;local v84;while true do local v87=0 -0;local v88;while true do if ((v87==(0 + 0)) or ((11994 -7974)<2845)) then v88=0 + 0;while true do if (((2097 + 331)>(1144 + 1108)) and (v88==(0 -0))) then local v96=0 -0;while true do if ((v96==(0 -0)) or ((4360 -(1863 + 84))<(556 + 235))) then v83=v75[v66];v84=v83[1 + 0];v96=1 + 0;end if ((v96==(4 -3)) or ((9545 -5641)<=(1529 + 945))) then v88=2 -1;break;end end end if ((v88==(1 + 0)) or (1608>=(3175 -(704 + 63)))) then if (((4315 -2252)==((135 + 2173) -(227 + 18))) and (v84<=((1 + 17) -5))) then if (((3948 -1075)<(4151 -(10 + 1))) and (v84<=(5 + 1))) then if ((v84<=2) or ((765 + 1291)>(1059 + 1344))) then if ((v84<=(0 + 0)) or ((1124 -(244 + 218))>(1775 -(111 + 174)))) then if (v81[v83[2 -0]] or (((11963 -(514 + 89)) -7247)<=(1470 -((1852 -(298 + 1115)) + 252)))) then v66=v66 + ((1 + 0) -0);else v66=v83[1199 -(564 + 632)];end elseif ((v84>(1585 -(600 + 984))) or (2491==(4157 + 266))) then v81[v83[(2 -1) + 1]]={};else v81[v83[2 + 0]]=v28(v76[v83[6 -3]],nil,v36);end elseif (((4528 -(99 + 249))<(1303 + 3432)) and (v84<=(559 -(124 + 431)))) then if ((v84==((1770 -(551 + 1209)) -7)) or ((87 + 173)==((6764 -4834) -(1169 + (549 -281))))) then local v126=0 -0;local v127;local v128;local v129;local v130;local v131;while true do if (((2833 + 240)>1980) and (v126==3)) then if (((2905 -1191)<(3927 -(848 + 192))) and v131) then local v210=0 + 0;local v211;local v212;while true do if ((v210==(682 -(330 + 351))) or ((257 + 420)==(180 + 5))) then while true do if (((5675 -(1100 + 384))>=((13524 -9970) -1785)) and (v211==(643 -(65 + 578)))) then v212=0 -0;while true do if (((550 + 1979)==(456 + 2073)) and (v212==((781 -(503 + 278)) -0))) then v81[v129]=v131;v66=v83[1 + 0 + (1291 -(798 + 491))];break;end end break;end end break;end if ((v210==(1759 -(73 + 1686))) or (((2041 + 3706) -(576 + 955))>(4883 -((1421 -(816 + 581)) + 163)))) then v211=(2069 -(85 + 149)) -(1159 + 676);v212=nil;v210=872 -(506 + 365);end end else v66=v66 + (1 -0);end break;end if ((v126==(162 -(125 + 35))) or (((13573 -9191) -(133 + 445))<=(116 + 276))) then local v203=0 -0;while true do if ((v203==((0 -0) -0)) or ((2391 -(8 + 1 + 3))>=(13282 -8364))) then for v230=2 -1,v128 do v81[v129 + v230]=v130[v230];end v131=v130[1 -(0 -0)];v203=1 + 0;end if (((5878 -(896 + 541))==(6627 -2186)) and (v203==(2 -1))) then v126=704 -(404 + 297);break;end end end if ((v126==(0 + 0)) or ((1760 -1282)>(2375 -(15 + 131)))) then local v204=0 -0;while true do if (((8 + 640)<(3129 -(31 + (134 -(16 + 32))))) and (v204==(0 -0))) then v127=v83[6 -4];v128=v83[1 + 3];v204=1 + 0;end if (((710 + (3094 -(341 + 635)))>(2106 -(1263 + 639))) and (v204==((1 + 0) -0))) then v126=821 -(726 + (187 -93));break;end end end if (((2414 + 633)>(3928 -2428)) and (v126==(1 + 0))) then local v205=271 -(226 + 45);while true do if (((1536 + 2533)>(24 + 8)) and (v205==(1398 -(789 + 424 + 184)))) then v126=958 -(441 + 83 + (1532 -1100));break;end if (((3264 + 1631)>=(3809 -((944 -(164 + 584)) + 460))) and (v205==(221 -(11 + 210)))) then v129=v127 + 1 + 1;v130={v81[v127](v81[v127 + (1768 -(1678 + 89))],v81[v129])};v205=2 -1;end end end end else local v132=1071 -(163 + 908);local v133;while true do if ((v132==(921 -(393 + (1545 -1017)))) or ((16083 -(16339 -4851))==(2303 -(851 + 763)))) then v133=v83[2];v81[v133](v12(v81,v133 + (1315 -(809 + 505)),v83[(59 -(20 + 37)) + 1]));break;end end end elseif (((3981 -(352 + 54))<((3926 -1097) + (2558 -(1386 + 172)))) and (v84>(7 -2))) then v81[v83[(752 -(64 + 681)) -5]]=v81[v83[3 + 0]][v83[12 -8]];else v81[v83[3 -1]][v83[3 + 0]]=v81[v83[4]];end elseif (((4700 -(836 + 551))>((3526 + 239) -1265)) and (v84<=(2 + 7))) then if (((93 + 258)>(717 -(555 -182))) and (v84<=(13 -6))) then local v116=0 -0;local v117;local v118;local v119;local v120;while true do if ((v116==(3 -1)) or ((4819 -(1658 + (1541 -(831 + 535))))<=(2423 -(68 + 417)))) then while true do if (((4930 -(1498 + 37))>(1610 -1117)) and (v117==(1 + 0))) then v120=419 -(269 + 150);for v213=v118,v83[3 + 1] do local v214=0;local v215;while true do if (((6017 -2028)>(915 -633)) and (v214==(579 -(62 + 517)))) then v215=1975 -(1625 + 350);while true do if (((7872 -5413)==(4113 -(1102 + (1797 -1245)))) and (v215==(0 + 0))) then v120=v120 + ((2685 -(1285 + 462)) -(326 + 611));v81[v213]=v119[v120];break;end end break;end end end break;end if (((666 + 1127)<(1151 + 1767)) and (v117==(0 + 0))) then v118=v83[9 -7];v119={v81[v118](v12(v81,v118 + ((724 -(390 + 332)) -1),v67))};v117=1537 -(492 + 1044);end end break;end if ((v116==(1010 -(272 + 737))) or (((2978 -(322 + 687)) -(146 + (2024 -(990 + 812))))==(4275 -(665 + 346)))) then v119=nil;v120=nil;v116=(2649 -1848) -(69 + 730);end if (((0 -0)==v116) or (((4505 -(753 + 267)) -(4 + 11))<=(7217 -4498))) then v117=0 + 0;v118=nil;v116=4 -3;end end elseif ((v84>(6 + (4 -2))) or ((4 + 10 + 53)>=(544 -172))) then do return;end else v81[v83[3 -1]]=v35[v83[(9 -7) + 1]];end elseif (((5007 -(2859 -1301))>(2058 -(1191 + 694))) and (v84<=(1356 -(88 + 1257)))) then if ((((2047 -(57 + 493)) -(404 + (327 -200)))<(3137 + 439)) and (v84==(32 -(1683 -(1283 + 378))))) then v81[v83[(4 -2) + 0]]();elseif ((v83[859 -(579 + 278)]==v81[v83[(3 -2) + 3]]) or ((6803 -2154)<=((3119 -(193 + 78)) -(154 + 101)))) then v66=v66 + (515 -(149 + 365));else v66=v83[3 + 0];end elseif ((v84>(33 -21)) or (1577>=(5956 -2339))) then local v140=373 -(183 + 190);local v141;local v142;local v143;while true do if (((6759 -3179)>(4129 -2149)) and (v140==(1965 -(587 + 1378)))) then v141=124 -(10 + 114);v142=nil;v140=1 + 0;end if (((8376 -5897)==(4102 -(1161 + 462))) and (v140==(1 + (15 -(7 + 8))))) then v143=nil;while true do if (((3292 + 509)>(1399 -(181 + 175 + 148))) and (v141==(0 -0))) then local v219=1169 -(763 + 406);while true do if ((v219==(1859 -(1474 + (1339 -(800 + 154))))) or ((6091 -3221)<650)) then v142=0 -0;v143=nil;v219=1 -0;end if ((v219==((5883 -4304) -(764 + 814))) or ((14685 -10660)<(92 + 1192))) then v141=1 + 0;break;end end end if ((v141==(1 + 0)) or ((1125 + 237)<=(2113 -(437 + 1098)))) then while true do if (((15249 -10813)>(5453 -(98 + 1859))) and ((0 -0)==v142)) then v143=v83[2 + 0];v81[v143](v81[v143 + 1 + 0]);break;end end break;end end break;end end else v66=v83[6 -3];end elseif ((v84<=(2 + 18)) or ((4823 -(614 + 789))<(4728 -(968 + 613)))) then if ((v84<=(1108 -(933 + 159))) or ((228 + 313)>((11127 + 3384) -10925))) then if (((175 + 1947)>(264 + (3675 -2670))) and (v84<=(29 -15))) then v81[v83[2 + 0]]=v81[v83[783 -(242 + 538)]];elseif ((v84==(995 -(184 + (2254 -(968 + 490))))) or ((1191 -782)==(886 + 3986))) then if (((12604 -(23813 -15633))>(1673 -(33 + 1227))) and (v81[v83[2 + 0]]==v83[(1754 -(691 + 240)) -(94 + 725)])) then v66=v66 + 1 + 0;else v66=v83[1550 -(1542 + 5)];end else local v145=0 -0;local v146;local v147;local v148;local v149;local v150;while true do if ((v145==(771 -(612 + 159))) or ((2071 + 66 + (4155 -(1169 + 776)))<(1895 -(389 + 921)))) then v146=0 + 0;v147=nil;v145=1 + 0;end if ((v145==(3 -1)) or (((4676 -(68 + 865)) -1949)<(761 + 20))) then v150=nil;while true do if ((v146==(1 + 0)) or ((1571 -((817 -611) + 141))>=(1005 + 2262))) then v67=(v149 + v147) -((2 -1) + 0 + 0);v150=0 -0;v146=468 -(312 + 154);end if ((v146==(800 -(664 + 134))) or ((14806 -10194)==(14204 -10091))) then for v233=v147,v67 do local v234=0 + 0;local v235;while true do if ((4296>(2160 + 1523)) and ((1377 -((3467 -2193) + 103))==v234)) then v235=(0 -0) -0;while true do if ((v235==(0 -0)) or (1930==4898)) then v150=v150 + (457 -(113 + 343));v81[v233]=v148[v150];break;end end break;end end end break;end if (((1145 + 525)<(5291 -(545 + 336 + 260))) and (v146==(0 + 0))) then local v220=0 + 0;while true do if ((v220==(0 + 0)) or ((9976 -7333)>(1628 + 1528))) then v147=v83[1 + 1];v148,v149=v78(v81[v147](v81[v147 + (4 -3) + 0]));v220=1;end if (((1013 -(26 + 761))<1725) and (v220==(3 -2))) then v146=(4 -2) -1;break;end end end end break;end if ((v145==(452 -(378 + 73))) or ((320 + 1185)>(3602 + 248))) then v148=nil;v149=nil;v145=1 + (2 -1);end end end elseif ((v84<=(38 -20)) or ((11428 -7373)==(4396 -(435 + (523 -(33 + 216)))))) then if (((29 + 85 + 304)==(267 + 151)) and (v84>(8 + 9))) then local v151=1997 -(1896 + 101);local v152;local v153;local v154;local v155;local v156;while true do if (((1182 + 2280)>=(89 + 2954)) and (v151==(1 + (441 -(102 + 339))))) then v154=nil;v155=nil;v151=8 -6;end if (((7257 -4296)>(678 -191)) and ((817 -(57 + 760))==v151)) then v152=1163 -(219 + 944);v153=nil;v151=1 + 0;end if (((121 + 174)<=(2335 -996)) and (v151==(4 -2))) then v156=nil;while true do if ((v152==(1 + 0)) or ((33 + 175)>(1753 + (420 -264)))) then v155=nil;v156=nil;v152=1 + 1;end if ((v152==2) or ((3383 + 112)<=(1523 + 82))) then while true do if (((2 -1)==v153) or ((4679 -(448 + 972))>=((733 + 4213) -(191 + 1)))) then local v240=699 -(670 + 29);while true do if ((v240==(0 -0)) or ((11381 -7841)>(6389 -((2756 -1367) + 296)))) then v156={};v155=v9({},{__index=function(v278,v279)local v289=0 + 0;local v290;local v291;local v292;while true do if (((3594 -(133 + 1703))>=(422 + 278)) and (v289==(1646 -(387 + 1258)))) then v292=nil;while true do if (((305 -100)<(5214 -(238 + 332))) and (v290==(2 -1))) then while true do if (((3581 -(927 + 12 + 233))==(6366 -3957)) and (v291==(0 -0))) then local v325=385 -(315 + 70);while true do if ((v325==(1592 -(1338 + (1844 -(165 + 1425))))) or ((799 + (8037 -4572))>(10007 -5077))) then local v338=0 -0;while true do if (((1396 + 118)<(8625 -4369)) and (v338==((0 -0) + 0))) then v292=v156[v279];return v292[1132 -(558 + 573)][v292[9 -7]];end end end end end end break;end if ((v290==(0 -0)) or (3212<2329)) then local v317=0 -0;while true do if ((v317==(1 + 0)) or ((2257 + 1669)<((2506 -1713) + 296))) then v290=1301 -(157 + 1143);break;end if ((v317==(487 -(480 + 7))) or ((1169 + 49 + 43)>(563 + 1843))) then v291=1336 -(1185 + 151);v292=nil;v317=441 -(150 + (1841 -(1026 + 525)));end end end end break;end if (((3273 -(837 + 250))==2186) and (v289==(0 -0))) then v290=0 -0;v291=nil;v289=1999 -(617 + 1381);end end end,__newindex=function(v280,v281,v282)local v293=0 -0;local v294;local v295;while true do if (((4552 -(1087 + 124))==(4033 -(420 + 272))) and (v293==(130 -(11 + 119)))) then local v302=0 + 0;while true do if ((v302==(1 + 0)) or ((4215 -(115 + 278))<560)) then v293=887 -(496 + 390);break;end if (((9039 -7126)>(659 -166)) and (v302==(714 -(678 + 36)))) then v294=(1568 -(324 + 1244)) + 0;v295=nil;v302=1 + 0;end end end if (((6163 -(682 + 710))>(2860 -1995)) and ((1 + (1127 -(423 + 704)))==v293)) then while true do if (((5579 -4095)<=(4850 -((2080 -1125) + 972))) and ((137 -(17 + 120))==v294)) then v295=v156[v281];v295[1 + 0][v295[6 -4]]=v282;break;end end break;end end end});v240=1 + 0;end if ((v240==(1 + 0)) or ((627 -210)>=(2675 -(550 + 346)))) then v153=573 -(389 + 182);break;end end end if (((616 + 543)<(1639 + 1119 + 1438)) and ((728 -(346 + 382))==v153)) then local v241=1953 -((2204 -(125 + 420)) + 294);local v242;while true do if (((19805 -14825)==(8798 -3818)) and (v241==(0 -0))) then v242=1303 -((1840 -894) + 357);while true do if ((v242==(1 + (1227 -(609 + 618)))) or (4941<=(6101 -3118))) then v153=1487 -(1119 + 367);break;end if (((950 -(723 + (1753 -(197 + 1329))))==v242) or ((1175 + 1265)==(8350 -5406))) then v154=v76[v83[909 -(46 + 860)]];v155=nil;v242=1 + 0;end end break;end end end if (((4851 -2940)<=(4003 + 624)) and (v153==(1354 -(936 + 416)))) then for v253=1 + 0 + 0,v83[(10 + 947) -(756 + 197)] do local v254=0 -0;local v255;local v256;local v257;while true do if ((4113==(3668 + 445)) and (v254==(0 -(1598 -(704 + 894))))) then v255=593 -(312 + (1642 -(184 + 1177)));v256=nil;v254=1 + 0;end if (((2208 -1653)==(1006 -(2067 -(577 + 1039)))) and (v254==(1240 -(1181 + 58)))) then v257=nil;while true do if (((579 -425)<(155 + 743 + 2836)) and (v255==(0 + 0))) then local v300=862 -(558 + 304);while true do if (((1634 + 307)<(4042 -(687 + 726))) and (v300==(0 + 0))) then v256=0 -0;v257=nil;v300=1 + 0;end if (((7921 -2952)==(16319 -11350)) and (v300==((2697 -(742 + 117)) -(1092 + (1908 -1163))))) then v255=3 -2;break;end end end if ((v255==(1 + 0)) or ((1637 -(413 + 207))>(4340 -(819 + 35)))) then while true do if ((((1804 -(430 + 1211)) + (76 -32))<(302 + 2276)) and (v256==(3 -2))) then if (((2007 -(242 + 777))==(2296 -(251 + 1057))) and (v257[1 + 0]==(7 + 7))) then v156[v253-(1 + 0 + 0)]={v81,v257[1227 -(228 + (1533 -537))]};else v156[v253-(1065 -(327 + 737))]={v35,v257[6 -3]};end v80[ #v80 + 1 + 0]=v156;break;end if (((2881 -(818 + 266))>=(1336 -((67 -52) + (1279 -(1029 + 244))))) and (v256==(0 + 0))) then local v313=0 + 0;local v314;while true do if (((475 -291)<=(2043 + 692)) and ((1531 -(100 + 1431))==v313)) then v314=0 -0;while true do if ((v314==(300 -(237 + 63))) or ((4768 -((1726 -(457 + 471)) + 195))<(5595 -2197))) then local v329=0 -0;while true do if ((3940<=(6797 -2021)) and (v329==(0 + 0))) then v66=v66 + (1694 -(1219 + 474));v257=v75[v66];v329=1 + 0;end if (((22036 -17302)>(1566 -((1605 -(1305 + 159)) + (1318 -(295 + 316))))) and (v329==(1 + 0))) then v314=1 -0;break;end end end if (((2086 -(1369 + 232))<=(949 + 121)) and (v314==(1 + 0))) then v256=2 -1;break;end end break;end end end end break;end end break;end end end v81[v83[598 -(499 + 97)]]=v28(v154,v155,v36);break;end end break;end if (((0 + 0)==v152) or ((2597 -(1018 + 278))==(607 + 3780 + 551))) then local v221=321 -(167 + 154);while true do if (((2097 -((2798 -(920 + 1007)) + 287))<(828 + 1746)) and (v221==((0 + 0) -(1251 -(1170 + 81))))) then v153=1680 -(837 + 843);v154=nil;v221=1 + 0;end if (((4 -3)==v221) or (((17057 -3732) -8543)<=(267 -(820 -647)))) then v152=1973 -(1091 + 881);break;end end end end break;end end else local v157=0 + 0;local v158;local v159;while true do if ((v157==(1 + 0)) or ((1855 + (2413 -(485 + 1176)))==(7014 -3077))) then while true do if (((3859 -(135 + 274))>=(42 + 616)) and (v158==(925 -(217 + 708)))) then v159=v83[12 -((249 -(186 + 55)) + (2 -0))];v81[v159]=v81[v159](v12(v81,v159 + (469 -(204 + (730 -(290 + 176)))),v83[1876 -(1251 + 522 + 100)]));break;end end break;end if ((v157==((130 -(34 + 96)) -(663 -(580 + 83)))) or ((10567 -6318)<(3721 -1471))) then v158=0;v159=nil;v157=2 -1;end end end elseif ((v84>(1 + 18)) or ((1784 + 1541)>=(9787 -4936))) then v81[v83[2 + 0]]=v83[3 -0];else local v162=752 -((132 -104) + 724);local v163;local v164;local v165;local v166;while true do if (((4469 -(718 + 211))>=(1169 + 923)) and (v162==((1 + 2) -1))) then while true do if (((3377 -(335 + 437))>((2789 -1420) -(739 + (96 -46)))) and ((360 -(177 + 183))==v163)) then local v224=0 + 0;while true do if ((1476<(5301 -3313)) and (v224==((1639 -(968 + 671)) + 0))) then v164=0 -0;v165=nil;v224=1 + 0;end if (((4306 -(1570 + 131))<=(14399 -10390)) and ((888 -(26 + (2349 -(1094 + 394))))==v224)) then v163=(1695 + 99) -(1670 + 123);break;end end end if (((4662 -803)>(1608 -(29 + 87))) and (v163==(1 -0))) then v166=nil;while true do if (((1767 + 685)==(6659 -4207)) and (v164==(1 + 0))) then v81[v165 + (923 -(348 + 531 + 43))]=v166;v81[v165]=v166[v83[1303 -(580 + 510 + 209)]];break;end if (((12682 -8487)>(1211 -798)) and (v164==((646 + 556) -(329 + 18 + 855)))) then local v247=0 -0;while true do if ((v247==((0 + 0) -(0 -0))) or ((3344 -(3379 -1940))==(6224 -2173))) then v165=v83[1 + 1];v166=v81[v83[11 -8]];v247=2 -1;end if ((v247==((4 -1) -2)) or ((73 + 1420 + 291)<=(1873 -(423 + 124)))) then v164=(3 -2) + 0;break;end end end end break;end end break;end if ((v162==(0 + 0)) or (((5867 -(866 + 87)) -(640 + 20 + 60))<=(2431 -(23 + 21)))) then v163=1489 -(1120 + 369);v164=nil;v162=(1023 -(42 + 980)) + 0;end if (((1071 -(536 + 534))==v162) or (((4511 -2613) -1359)>=(119 + 489))) then v165=nil;v166=nil;v162=7 -5;end end end elseif ((v84<=(22 + 2)) or ((5405 -(471 + 1077))==(3877 -2461))) then if ((v84<=(14 + 8)) or ((3307 -1741)==(11809 -7804))) then if ((((490 -193) + 14)==(810 -(33 + 466))) and (v84>(4 + 17))) then local v167=0 + 0;local v168;local v169;local v170;local v171;while true do if ((((14594 -9252) -(372 + 57))>=(6202 -1603)) and ((253 -(130 + 122))==v167)) then v170=nil;v171=nil;v167=2;end if ((v167==(0 -0)) or ((855 -523)==(6936 -3784))) then v168=0 -0;v169=nil;v167=1 -(0 + 0);end if ((v167==(3 -1)) or ((1623 -(1190 + 121))>=(2361 -1284))) then while true do if (((940 -(136 + 415))<=(2588 + 160)) and (v168==(1 + 0))) then v171=nil;while true do if ((v169==((897 -(395 + 502)) -0)) or ((189 + 172)>=(2664 -(1378 + 344)))) then local v248=1807 -(46 + 1761);local v249;while true do if ((v248==(181 -(42 + (1365 -(458 + 768))))) or ((3024 -1826)>(1950 + 1081))) then v249=0 -0;while true do if ((v249==((1699 -(1422 + 277)) + 0)) or ((413 + 630)>=3780)) then local v298=(486 -(35 + 451)) + 0;while true do if (((5505 -3033)>=(505 + 21 + 1252)) and (v298==(1 + 0 + 0))) then v249=1 -0;break;end if (((0 + 0)==v298) or ((5444 -(918 + 60))<=(7069 -3748))) then v170=v83[9 -(10 -3)];v171={};v298=1;end end end if ((v249==(1 + 0)) or ((3898 -(819 + 101))==(4163 -(54 + 382)))) then v169=2 -1;break;end end break;end end end if (((10695 -6680)<(11378 -6971)) and (v169==(1 -0))) then for v258=1, #v80 do local v259=0 -0;local v260;local v261;while true do if ((v259==(1978 -(1093 + 885))) or ((1974 -((61 -(8 + 20)) + 37))>(4907 -((1895 -(1661 + 186)) + 6)))) then v260=30 -(10 + 20);v261=nil;v259=861 -(719 + 141);end if ((v259==(2 -1)) or (((3451 -(674 + 253)) -(537 + 1434))<(1378 -1017))) then while true do if ((1861==(2851 -(497 + 493))) and (v260==(0 + 0))) then v261=v80[v258];for v303=277 -(228 + 10 + 39), #v261 do local v304=0 -0;local v305;local v306;local v307;local v308;local v309;while true do if (((485 -((990 -(101 + 521)) + 116))==v304) or ((2095 -(64 + 84))<=(437 + 178))) then v307=nil;v308=nil;v304=401 -(268 + 131);end if (((1124 -728)<=3875) and ((759 -(155 + 604))==v304)) then v305=0 -0;v306=nil;v304=716 -(46 + 669);end if (((3936 -1963)>(2248 -(894 + 687))) and (v304==(1 + 1))) then v309=nil;while true do if (((2854 -(1180 -(4 + 99)))>=(425 + (2104 -(192 + 927)))) and (v305==(1586 -(912 + (1248 -(289 + 285)))))) then local v326=0 + 0;while true do if (((0 -0)==v326) or ((4285 -(221 + 980))<(848 -446))) then v306=0 -0;v307=nil;v326=1 -0;end if ((v326==(1 -0)) or ((2243 + 1867)<(2796 -(8 + 3)))) then v305=1051 -(174 + 876);break;end end end if ((((6451 -(163 + 8)) -4534)<=(8966 -4374)) and (v305==(5 -3))) then while true do if ((v306==(2 -1)) or (((3731 + 445) -(1447 + 442))>(2178 + 1984))) then v309=v307[4 -2];if (((3441 -(524 + 189))<=(7409 -4275)) and (v308==v81) and (v309>=v170)) then local v343=1761 -(885 + 876);local v344;while true do if (((2959 -1902)<=(218 + 3817)) and (v343==(0 + 0))) then v344=(0 -0) -(0 -0);while true do if ((v344==(915 -((1702 -(520 + 461)) + 194))) or ((6645 -(1413 + 380))<(12766 -9508))) then v171[v309]=v308[v309];v307[1 + 0]=v171;break;end end break;end end end break;end if ((v306==(0 + 0)) or ((8080 -4847)>((12120 -6938) -(169 + 67)))) then local v340=30 -(21 + 9);local v341;while true do if (((5287 -(832 + (288 -185)))<(6006 -((2781 -1440) + 291))) and (v340==(0 -0))) then v341=0 -0;while true do if ((v341==(1986 -(1434 + 552))) or ((2638 + 206)==(799 + 3662))) then local v348=0 + 0;while true do if (((0 -(0 + 0))==v348) or ((3853 -(885 + 860))>(1967 + 1896))) then v307=v261[v303];v308=v307[1 + (153 -(97 + 56))];v348=217 -(87 + 129);end if (((218 + 1367)<=(2223 -416)) and (v348==(2 -1))) then v341=3 -2;break;end end end if ((v341==(4 -3)) or ((727 -(151 + 13))>(4715 -(30 + 36 + 92)))) then v306=1 -0;break;end end break;end end end end break;end if ((v305==(1 + 0)) or ((2066 -((2148 -(897 + 1051)) + 43))<=(1553 + 140))) then local v327=0 + 0 + 0;while true do if ((((4648 -(1017 + 95)) -1999)==((3100 + 1479) -3042)) and (v327==1)) then v305=2 + 0;break;end if ((v327==(0 + 0)) or ((4704 -2741)==((1521 -(738 + 85)) -(130 + 88)))) then v308=nil;v309=nil;v327=1 + 0;end end end end break;end end end break;end end break;end end end break;end end break;end if ((v168==(0 -0)) or ((2400 -792)>(60 + 2674))) then local v225=0 + 0;while true do if (((1422 + 2134)<(7287 -2611)) and ((1231 -(303 + 928))==v225)) then v169=1721 -(554 + 1167);v170=nil;v225=1591 -(770 + 820);end if ((v225==(2 -1)) or ((3409 + 1430)<((5042 -(451 + 88)) -2922))) then v168=1 + 0;break;end end end end break;end end else v81[v83[2 + 0]]=v36[v83[(281 -(35 + 244)) + 1]];end elseif ((v84==(319 -((524 -(278 + 72)) + 122))) or ((1162 + 2417)<(1071 + 319))) then v81[v83[763 -(465 + 296)]]=v83[4 -1]~=(0 -0);else local v175=1130 -(568 + 69 + 493);local v176;local v177;local v178;local v179;local v180;local v181;while true do if ((v175==(1325 -(81 + 1243))) or (2485<(2009 -(210 + 778)))) then v178=nil;v179=nil;v175=1 + 1;end if (((1 + 1)==v175) or ((2155 + 2451)<=(7907 -(6910 -2810)))) then v180=nil;v181=nil;v175=1041 -(797 + 241);end if ((v175==(0 + 0)) or (((1672 -(33 + 25)) + 26)>=(4223 -2094))) then v176=0 -0;v177=nil;v175=1 + 0;end if (((4841 -(198 + 197))>=(1661 + 1322)) and (v175==(14 -11))) then while true do if ((((3037 -(155 + 78)) -(893 + 838))==(2475 -1402)) and ((810 -(64 + 745))==v176)) then local v226=0 + 0;while true do if (((89 -(1240 -(878 + 331)))<((45963 -29617) -11447)) and (v226==(979 -(52 + 26 + 901)))) then v179=nil;v180=nil;v226=1 + 0;end if (((1453 -(155 + 328))<=(3796 -(25 + 47))) and (v226==(1779 -(1385 + 393)))) then v176=592 -(547 + 43);break;end end end if (((5324 -((696 -(11 + 10)) + (2525 -1452)))>=(34 + 225)) and (v176==(0 + 0))) then local v227=0 -0;while true do if ((v227==((1228 -(381 + 588)) -(204 + 53 + 1))) or ((785 + 2737)<(855 -(773 + 16)))) then v176=2 -1;break;end if (((1123 -(148 + 267))<(7204 -3815)) and (v227==(0 + 0))) then v177=0 + 0;v178=nil;v227=1655 -(1524 + 42 + 88);end end end if ((((4330 -(78 + 51)) -1779)<(6726 -3112)) and (v176==(1970 -(1090 + 878)))) then v181=nil;while true do if (((1603 + 420)>=(111 + 864)) and ((1 + 1)==v177)) then for v262=v178,v67 do local v263=1445 -(752 + 693);while true do if (((3184 -(77 + 29))>=(3906 -(99 + 1300))) and (v263==(1802 -(1724 + 78)))) then v181=v181 + (1 -0);v81[v262]=v179[v181];break;end end end break;end if (((17172 -13154)==((4919 -1955) + 1054)) and (v177==(1 + 0))) then local v250=0 + 0 + 0;while true do if ((v250==(0 -0)) or (((1350 + 176) -961)>=(587 + 298))) then v67=(v180 + v178) -(1 + 0);v181=(0 -0) -0;v250=1 + 0;end if (((422 + 247)<(1781 + 254)) and (v250==(1 + 0))) then v177=1644 -(287 + 892 + 463);break;end end end if (((711 + 2 + 758)>=(2124 -(1096 + 230))) and (v177==(457 -(376 + 81)))) then local v251=409 -((913 -546) + 42);local v252;while true do if (((6603 -(626 + 1093))>=(4402 -((1155 -(170 + 492)) + 1332))) and (v251==(0 + 0))) then v252=(0 + 0) -0;while true do if ((v252==(1103 -(867 + 235))) or ((5897 -1687)<=(2752 -1295))) then v177=(2 -1) + 0;break;end if (((2923 + 599)<=(742 + 4252)) and (v252==(73 -(40 + 33)))) then local v299=(0 -0) -0;while true do if ((v299==(1846 -(1821 + 24))) or ((2689 -(119 + 113))==(414 + 734))) then v252=1;break;end if (((578 + 2067)<(1103 + 1803)) and (v299==(0 + 0))) then v178=v83[(1248 -750) -(451 + 45)];v179,v180=v78(v81[v178](v12(v81,v178 + (2 -1),v83[661 -(418 + 240)])));v299=1 + 0;end end end end break;end end end end break;end end break;end end end elseif ((3857>=(5740 -(7121 -4194))) and (v84<=(22 + (6 -2)))) then if ((v84>(769 -(404 + 340))) or ((12432 -9138)<(595 + 1081))) then local v182=435 -((1953 -(1048 + 476)) + 6);local v183;while true do if ((v182==(404 -(175 + 229))) or ((876 -(7 + 4))>(5608 -(153 + 1535)))) then v183=v83[3 -1];v81[v183]=v81[v183](v12(v81,v183 + 1 + 0,v67));break;end end else local v184=0 + 0;local v185;local v186;while true do if ((v184==(1453 -(991 + 461))) or (((8411 -5906) -1797)>(4067 -((586 -147) + 112)))) then while true do if (((1104 + 1153)<=((213 + 6734) -(1345 + 623))) and (v185==(535 -((834 -(64 + 681)) + 446)))) then v186=v83[1906 -(233 + 126 + 1545)];v81[v186]=v81[v186]();break;end end break;end if ((v184==(0 -0)) or (1842<=(19 + 10))) then v185=0 -0;v186=nil;v184=2 -1;end end end elseif ((v84>((715 -432) -(60 + (1841 -(794 + 851))))) or ((2724 + 1895)<=(7606 -3825))) then v81[v83[(6 -4) -0]][v83[2 + 1]]=v83[3 + (4 -3)];else for v193=v83[(1630 -(219 + 1409)) + 0],v83[1576 -(460 + 1005 + 108)] do v81[v193]=nil;end end v66=v66 + ((3 + 0) -2);break;end end break;end end end end A,B=v26(v10(v70));if  not A[1] then local v85=v34[4][v66] or "?";error("Script error at ["   .. v85   .. "]:"   .. A[2]);else return v12(A,2,B);end end;end return v28(v27(),{},v16)(...);end v14("LOL!",v8(),...);end
